@use "breakpoints" as *;
@use "sass:math";
@mixin position($position, $top, $left, $bottom, $right, $width, $height) {
  position: $position;
  top: $top;
  left: $left;
  bottom: $bottom;
  right: $right;
  width: $width;
  height: $height;
}

@mixin align($flex, $justify-content, $align-items, $height) {
  display: $flex;
  align-items: $align-items;
  justify-content: $justify-content;
  height: $height;
}

@mixin button(
  $color1,
  $color2,
  $textColor,
  $fontSize,
  $bd,
  $bdr,
  $paddingVertical,
  $paddingHorizontal
) {
  background: linear-gradient(to right, $color1, $color2);
  color: $textColor;
  text-decoration: none;
  display: inline-block;
  font-size: $fontSize;
  font-weight: 900;
  border-radius: $bdr;
  padding: $paddingVertical $paddingHorizontal;
  border: $bd;
  outline: none;
  cursor: pointer;
  text-transform: uppercase;
  position: relative;
}

@mixin toggleSpans($bg, $width, $height, $mt) {
  display: block;
  background: $bg;
  width: 3rem;
  height: 0.3rem;
  margin-top: 0.5rem;
  transition: all 0.3s linear;
}

@mixin responsive($breakpoint) {
  @if $breakpoint==large {
    @media (max-width: $lg) {
      @content;
    }
  }
  @if $breakpoint==medium {
    @media (max-width: $md) {
      @content;
    }
  }
  @if $breakpoint==small {
    @media (max-width: $sm) {
      @content;
    }
  }
  @if $breakpoint==xsmall {
    @media (max-width: $xsm) {
      @content;
    }
  }
}

@for $i from 1 through 12 {
  .col-#{$i} {
    width: math.div(100%, 12) * $i;
  }
}

@for $i from 1 through 12 {
  @include responsive(medium) {
    .m-#{$i} {
      width: math.div(100%, 12) * $i;
    }
  }
}
@for $i from 1 through 12 {
  @include responsive(small) {
    .s-#{$i} {
      width: math.div(100%, 12) * $i;
    }
  }
}
